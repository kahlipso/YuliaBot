import { __decorate } from "tslib";
import { rawDataSymbol, rtfm } from '@twurple/common';
import { EventSubChannelBaseModerationEvent } from "./EventSubChannelBaseModerationEvent.mjs";
/**
 * An EventSub event representing a moderator deleting a message in another channel during a shared chat session.
 */
let EventSubChannelSharedChatDeleteModerationEvent = class EventSubChannelSharedChatDeleteModerationEvent extends EventSubChannelBaseModerationEvent {
    constructor() {
        super(...arguments);
        this.moderationAction = 'shared_chat_delete';
    }
    /**
     * The ID of the user whose message is being deleted.
     */
    get userId() {
        return this[rawDataSymbol].shared_chat_delete.user_id;
    }
    /**
     * The name of the user whose message is being deleted.
     */
    get userName() {
        return this[rawDataSymbol].shared_chat_delete.user_login;
    }
    /**
     * The display name of the user whose message is being deleted.
     */
    get userDisplayName() {
        return this[rawDataSymbol].shared_chat_delete.user_name;
    }
    /**
     * Gets more information about the user.
     */
    async getUser() {
        return await this._client.users.getUserById(this[rawDataSymbol].shared_chat_delete.user_id);
    }
    /**
     * The ID of the message being deleted.
     */
    get messageId() {
        return this[rawDataSymbol].shared_chat_delete.message_id;
    }
    /**
     * The message text of the message being deleted.
     */
    get messageText() {
        return this[rawDataSymbol].shared_chat_delete.message_body;
    }
};
EventSubChannelSharedChatDeleteModerationEvent = __decorate([
    rtfm('eventsub-base', 'EventSubChannelSharedChatDeleteModerationEvent', 'broadcasterId')
], EventSubChannelSharedChatDeleteModerationEvent);
export { EventSubChannelSharedChatDeleteModerationEvent };
